name: CI/CD Pipeline

# The pipeline will be executed every time the "develop" branch is pushed.
on:
  push:
    branches:
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Maven Wrapper Executable
        run: chmod +x mvnw

      - name: Build All Microservices and Run Tests
        run: |          
          services=("api-gateway-service" "auth-service" "order-service" "catalog-service" "payment-service" "recommendation-service" "cart-service" "notification-service")
          for service in "${services[@]}"; do
            if [ -f "$service/pom.xml" ]; then
              echo "Building $service"
              ./mvnw -f "$service/pom.xml" clean verify -DskipTests || exit 1
            else
              echo "No pom.xml found in $service, skipping build."
            fi
          done

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and upload Docker images for each microservice

      - name: Build and Push API Gateway Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest ./api-gateway-service
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

      - name: Build and Push Eureka Server Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eureka-server:latest ./eureka-server
          docker push ${{ secrets.DOCKER_USERNAME }}/eureka-server:latest

      - name: Build and Push Auth Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Build and Push Order Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/order-service:latest ./order-service
          docker push ${{ secrets.DOCKER_USERNAME }}/order-service:latest

      - name: Build and Push Catalog Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/catalog-service:latest ./catalog-service
          docker push ${{ secrets.DOCKER_USERNAME }}/catalog-service:latest

      - name: Build and Push Payment Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/payment-service:latest ./payment-service
          docker push ${{ secrets.DOCKER_USERNAME }}/payment-service:latest

      - name: Build and Push Recommendation Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/recommendation-service:latest ./recommendation-service
          docker push ${{ secrets.DOCKER_USERNAME }}/recommendation-service:latest

      - name: Build and Push Cart Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cart-service:latest ./cart-service
          docker push ${{ secrets.DOCKER_USERNAME }}/cart-service:latest

      - name: Build and Push Notification Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:latest ./notification-service
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:latest

  deploy:
    name: Deploy to Integration Environment
    runs-on: ubuntu-latest
    needs: build-docker-images
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Deploy with Docker Compose
        run: docker-compose -f docker-compose.yml up -d --build